{"version":3,"sources":["components/Button/style.ts","components/Button/Button.tsx","components/WizardButtons/style.ts","components/WizardButtons/WizardButtons.tsx","helper/getDuration.ts","assets/icons/stop.svg","helper/audio/encoder-wav-worker.js","helper/audio/encoder-mp3-worker.js","helper/audio/encoder-flac-worker.js","helper/audio/RecorderService.js","components/MicRecorder/style.ts","components/MicRecorder/MicRecorder.tsx","containers/SubmitSteps/RecordingsSteps/Introduction/Record/Record.tsx","utils/yup.ts","helper/fileHelper.ts","modals/RecordErrorModal/style.ts","modals/RecordErrorModal/RecordErrorModal.tsx","containers/SubmitSteps/RecordingsSteps/Introduction/Record/style.ts","assets/icons/start.svg","assets/icons/upload.svg"],"names":["StyledButton","styled","button","dark","color","disabled","colors","purple_50","purple","white","Button","React","memo","children","props","type","WizardButtonsContainer","div","theme","layout","generalPaddingAmount","breakpoints","tablet","WizardButtons","invert","leftLabel","leftDisabled","leftHandler","rightLabel","rightDisabled","rightHandler","onClick","getDuration","e","remove","Promise","resolver","duration","Infinity","isSafari","addEventListener","pause","volume","currentTime","play","module","exports","recorded","this","onmessage","data","buffer","length","Uint8Array","i","index","sample","push","encode","sampleRate","bufferLength","wav","view","DataView","setUint32","setUint16","CHANNELS","set","msg","postMessage","dump","close","mp3encoder","mp3Data","convertBuffer","arrayBuffer","Float32Array","out","Int16Array","input","output","s","Math","max","min","floatTo16BitPCM","opts","samplesMono","remaining","left","subarray","encodeBuffer","mp3buf","flush","importScripts","baseUrl","lamejs","Mp3Encoder","flacEncoder","process","SAMPLERATE","COMPRESSION","BPS","flacOk","flacLength","flacBuffers","wavBuffers","writeCallbackFn","bytes","byteLength","initFlac","Flac","create_libflac_encoder","statusEncoder","init_encoder_stream","console","log","error","doEncodeFlac","audioData","bufLength","bufferI32","Uint32Array","setInt32","flacReturn","FLAC__stream_encoder_process_interleaved","exportFlacFile","recBuffers","recLength","samples","channelBuffer","recordingLength","result","offset","lng","mergeBuffersUint8","Blob","config","finalConfig","bps","channels","samplerate","compression","isReady","onready","setTimeout","init","len","buffered","splice","info","encodeFlac","FLAC__stream_encoder_finish","FLAC__stream_encoder_delete","RecorderService","cleanup","onRecording","em","removeEventListener","recordingFn","onAudioProcesss","onAudioProcessFn","createWorker","fn","js","toString","replace","blob","Worker","URL","createObjectURL","startRecording","timeslice","state","navigator","mediaDevices","getUserMedia","audioCtx","AudioContext","micGainNode","createGain","outputGainNode","createDynamicsCompressorNode","dynamicsCompressorNode","createDynamicsCompressor","createAnalyserNode","analyserNode","createAnalyser","forceScriptProcessor","broadcastAudioProcessEvents","usingMediaRecorder","processorNode","createScriptProcessor","processorBufferSize","createMediaStreamDestination","destinationNode","destination","manualEncoderId","encoderWorker","EncoderMp3","encoderMimeType","EncoderFlac","EncoderWav","event","Event","_onDataAvailable","userMediaConstraints","audio","echoCancellation","enableEchoCancellation","deviceId","then","stream","_startRecordingWithStream","catch","setMicGain","newGain","micGain","gain","setValueAtTime","micAudioStream","inputStreamNode","createMediaStreamSource","context","onGraphSetupWithInputStream","connect","nextNode","onaudioprocess","_onAudioProcess","mediaRecorder","MediaRecorder","mimeType","evt","_onError","start","slicing","setInterval","dispatchEvent","CustomEvent","detail","inputBuffer","outputBuffer","getChannelData","stopRecording","stop","clearInterval","chunks","chunkType","blobUrl","recording","ts","Date","getTime","size","disconnect","stopTracksAndCloseCtxWhenFinished","getTracks","forEach","track","window","webkitAudioContext","document","createDocumentFragment","undefined","onAudioPress","MicRecorderContainer","MicButtonsContainer","MicButtonWithText","MicNote","p","lightDarkGray","MicRecorderButton","opacity","MicRecorderImage","img","MicRecorderStartImage","MicRecorderStopImage","MicRecorderTimerContainer","MicRecorderTimerReleaseTextContainer","red","MicRecorderTextP","show","baseConfig","className","maxTimeInSeconds","minTimeInSeconds","onNewRecord","delay","recordingFile","isShortAudioCollection","t","useTranslation","recordingService","useRef","audioSamples","timerRef","timeout","target","useState","micAllowed","setMicAllowed","recordingInProgress","setRecordingInProgress","showReleaseText","setShowReleaseText","showShortRecordingText","setShowShortRecordingText","longPressTriggered","setLongPressTriggered","onAudioProcess","useCallback","current","channel","numberOfChannels","inputData","outputData","onNewRecording","a","fetch","r","fileName","file","FileHelper","blobToFile","humanReadableSize","sizeAsHuman","useEffect","err","Sentry","Audio","defaultMuted","muted","load","listenerFn","setTime","handleStartRecording","reset","handleStopRecording","handleFormatValue","value","preventDefault","handleStartLongPress","passive","handleEndLongPress","clearTimeout","RecordErrorModal","isOpen","modalTitle","onConfirm","seconds","ref","startImmediately","checkpoints","time","callback","Minutes","Seconds","formatValue","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onMouseLeave","src","StartSVG","alt","StopSVG","audioMinLength","recordYourBreath","recordYourSpeech","recordYourCough","schema","Yup","object","mixed","required","validateAudioSize","when","_schema","validateAudioLength","defined","onNext","onManualUpload","defaultValues","currentLogic","action","Portal","usePortal","bindTo","getElementById","useForm","mode","_currentLogic","yupResolver","handleSubmit","control","getValues","formState","isValid","micKey","name","render","onChange","key","uploadedFile","UploadSVG","maxDuration","test","audioMaxSizeInMb","si","thresh","abs","units","u","toFixed","theBlob","b","lastModifiedDate","ModalBody","ModalTitle","ModalContent","Modal","setAppElement","style","content","height","maxWidth","margin","borderRadius","border","overlay","backgroundColor","MainContainer","Text","BlackText","darkBlack","MicContainer","UploadContainer","UploadImage","UploadText","StopImg","attrs"],"mappings":"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","file":"static/js/11.8f592500.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { colors } from '../../theme';\r\n\r\nexport interface StyledButtonProps {\r\n  disabled?: boolean;\r\n  dark?: boolean;\r\n  id?: string;\r\n}\r\n\r\nexport const StyledButton = styled.button<StyledButtonProps>`\r\n  height: 50px;\r\n  border-radius: 15px; \r\n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  width: 100%;\r\n\r\n  ${({ dark, disabled }) => {\r\n    const color = disabled ? colors.purple_50 : colors.purple;\r\n    return dark ? `\r\n    background-color: ${color};\r\n    color: ${colors.white};\r\n    border: none;\r\n  ` : `\r\n    background-color: ${colors.white};\r\n    color: ${color};\r\n    border: 1px solid ${color};\r\n  `;\r\n  }}\r\n`;\r\n","import React, { PropsWithChildren } from 'react';\r\n\r\n// Styles\r\nimport {\r\n  StyledButton,\r\n  StyledButtonProps,\r\n} from './style';\r\n\r\nexport interface ButtonProps extends PropsWithChildren<StyledButtonProps> {\r\n  onClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void);\r\n}\r\n\r\nconst Button = React.memo(({ children, ...props }: ButtonProps) => ((\r\n  <StyledButton\r\n    type=\"button\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </StyledButton>\r\n)));\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nexport const WizardButtonsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  max-width: ${props => `calc(100% - ${props.theme.layout.generalPaddingAmount * 2}px)`};\r\n  margin: 0 auto;\r\n\r\n  button {\r\n    flex: 1;\r\n    min-height: 50px;\r\n    margin-bottom: 8px;\r\n\r\n    &:first-of-type {\r\n      margin-left: 0px !important;\r\n    }\r\n  }\r\n\r\n  @media screen and (${props => props.theme.breakpoints.tablet}){\r\n    max-width: 470px;\r\n  }\r\n`;\r\n","/* eslint-disable react/require-default-props */\r\nimport React from 'react';\r\n\r\n// Components\r\nimport Button from 'components/Button';\r\n\r\n// Styles\r\nimport {\r\n  WizardButtonsContainer,\r\n} from './style';\r\n\r\ninterface WizardButtonsProps {\r\n  invert?: boolean;\r\n  leftLabel: string;\r\n  leftDisabled?: boolean;\r\n  leftHandler: () => void;\r\n  rightLabel?: string;\r\n  rightDisabled?: boolean;\r\n  rightHandler?: () => void;\r\n}\r\n\r\nconst WizardButtons = React.memo(({\r\n  invert = false,\r\n  leftLabel,\r\n  leftDisabled,\r\n  leftHandler,\r\n  rightLabel,\r\n  rightDisabled,\r\n  rightHandler,\r\n}: WizardButtonsProps) => (\r\n  <WizardButtonsContainer>\r\n    <Button\r\n      dark={invert}\r\n      disabled={leftDisabled}\r\n      onClick={leftHandler}\r\n    >\r\n      {leftLabel}\r\n    </Button>\r\n    {\r\n        rightLabel && rightHandler && (\r\n          <Button\r\n            dark={!invert}\r\n            disabled={rightDisabled}\r\n            onClick={rightHandler}\r\n          >\r\n            {rightLabel}\r\n          </Button>\r\n        )\r\n      }\r\n  </WizardButtonsContainer>\r\n));\r\nexport default React.memo(WizardButtons);\r\n","import { isSafari } from 'react-device-detect';\r\n\r\nexport function getDuration(e: HTMLAudioElement, remove?: boolean): Promise<number> {\r\n  return new Promise(resolver => {\r\n    if (e.duration !== Infinity\r\n        && (!isSafari\r\n        || (isSafari && e.duration > 0))) {\r\n      resolver(e.duration);\r\n      return;\r\n    }\r\n    e.addEventListener('durationchange', () => {\r\n      if (remove) {\r\n        e.remove();\r\n      } else {\r\n        e.pause();\r\n        e.volume = 1;\r\n        e.currentTime = 0;\r\n      }\r\n      resolver(e.duration);\r\n    });\r\n    e.currentTime = 24 * 60 * 60; // Unprobable time\r\n    e.play();\r\n  });\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/stop.36f389ae.svg\";","export default function () {\r\n  // Parts copied from https://github.com/chris-rudmin/Recorderjs\r\n  const BYTES_PER_SAMPLE = 2;\r\n  const CHANNELS = 1; // 1=mono , 2=Stereo\r\n  let recorded = [];\r\n\r\n  function encode(buffer) {\r\n    const { length } = buffer;\r\n    const data = new Uint8Array(length * BYTES_PER_SAMPLE * CHANNELS);\r\n    for (let i = 0; i < length; i += 1) {\r\n      const index = i * BYTES_PER_SAMPLE * CHANNELS;\r\n      let sample = buffer[i];\r\n      if (sample > 1) {\r\n        sample = 1;\r\n      } else if (sample < -1) {\r\n        sample = -1;\r\n      }\r\n      sample *= 32768;\r\n      data[index] = sample;\r\n      // eslint-disable-next-line no-bitwise\r\n      data[index + 1] = sample >> 8;\r\n    }\r\n    recorded.push(data);\r\n  }\r\n\r\n  function dump(sampleRate) {\r\n    const bufferLength = recorded.length ? recorded[0].length : 0;\r\n    const length = recorded.length * bufferLength;\r\n    const wav = new Uint8Array(44 + length);\r\n\r\n    const view = new DataView(wav.buffer);\r\n\r\n    // RIFF identifier 'RIFF'\r\n    view.setUint32(0, 1380533830, false);\r\n    // file length minus RIFF identifier length and file description length\r\n    view.setUint32(4, 36 + length, true);\r\n    // RIFF type 'WAVE'\r\n    view.setUint32(8, 1463899717, false);\r\n    // format chunk identifier 'fmt '\r\n    view.setUint32(12, 1718449184, false);\r\n    // format chunk length\r\n    view.setUint32(16, 16, true);\r\n    // sample format (raw)\r\n    view.setUint16(20, 1, true);\r\n    // channel count\r\n    view.setUint16(22, CHANNELS, true);\r\n    // sample rate\r\n    view.setUint32(24, sampleRate, true); // 44100 Khz\r\n    // byte rate (channels * sample rate * block align)\r\n    view.setUint32(28, CHANNELS * sampleRate * BYTES_PER_SAMPLE, true); // kbps = 1411\r\n    // block align (channel count * bytes per sample)\r\n    view.setUint16(32, CHANNELS * BYTES_PER_SAMPLE, true);\r\n    // bits per sample\r\n    view.setUint16(34, 8 * BYTES_PER_SAMPLE, true); // 16\r\n    // data chunk identifier 'data'\r\n    view.setUint32(36, 1684108385, false);\r\n    // data chunk length\r\n    view.setUint32(40, length, true);\r\n\r\n    for (let i = 0; i < recorded.length; i += 1) {\r\n      wav.set(recorded[i], i * bufferLength + 44);\r\n    }\r\n\r\n    recorded = [];\r\n    const msg = [wav.buffer];\r\n    postMessage(msg, [msg[0]]);\r\n  }\r\n\r\n  this.onmessage = e => {\r\n    if (e.data[0] === 'encode') {\r\n      encode(e.data[1]);\r\n    } else if (e.data[0] === 'dump') {\r\n      dump(e.data[1]);\r\n    } else if (e.data[0] === 'close') {\r\n      this.close();\r\n    }\r\n  };\r\n}\r\n","// import 'babel-polyfill'\r\n// import lamejs from 'lamejs';\r\n\r\nexport default function () {\r\n  // Note that relative paths don't work when loaded as a blob\r\n  // https://stackoverflow.com/questions/22172426/using-importsscripts-within-blob-in-a-karma-environment\r\n  // importScripts('https://localhost:8443/workers/encoders/lame.js') // eslint-disable-line\r\n\r\n  const channels = 1; // 1 for mono or 2 for stereo\r\n  // let sampleRate = 44100 // 44.1khz (normal mp3 samplerate)\r\n  const kbps = 128; // encode 128kbps mp3\r\n\r\n  let mp3encoder = null;\r\n\r\n  const maxSamples = 1152;\r\n\r\n  let mp3Data = []; // array of Uint8Array\r\n\r\n  function init(opts) {\r\n    /* global lamejs */\r\n    importScripts(opts.baseUrl + '/workers/encoders/lame.min.js'); // eslint-disable-line\r\n    mp3encoder = new lamejs.Mp3Encoder(channels, opts.sampleRate, kbps);\r\n  }\r\n\r\n  function floatTo16BitPCM(input, output) {\r\n    for (let i = 0; i < input.length; i += 1) {\r\n      const s = Math.max(-1, Math.min(1, input[i]));\r\n      // eslint-disable-next-line no-param-reassign\r\n      output[i] = (s < 0 ? s * 0x8000 : s * 0x7FFF);\r\n    }\r\n  }\r\n\r\n  function convertBuffer(arrayBuffer) {\r\n    const data = new Float32Array(arrayBuffer);\r\n    const out = new Int16Array(arrayBuffer.length);\r\n    floatTo16BitPCM(data, out);\r\n    return out;\r\n  }\r\n\r\n  function encode(arrayBuffer) {\r\n    const samplesMono = convertBuffer(arrayBuffer);\r\n    let remaining = samplesMono.length;\r\n    for (let i = 0; remaining >= 0; i += maxSamples) {\r\n      const left = samplesMono.subarray(i, i + maxSamples);\r\n      const data = mp3encoder.encodeBuffer(left);\r\n      mp3Data.push(data);\r\n      remaining -= maxSamples;\r\n    }\r\n\r\n    // var mp3buf = mp3encoder.encodeBuffer(buffer)\r\n    // if (mp3buf.length > 0) {\r\n    //   mp3Data.push(mp3buf)\r\n    // }\r\n  }\r\n\r\n  function dump() {\r\n    const mp3buf = mp3encoder.flush();\r\n    if (mp3buf.length > 0) {\r\n      mp3Data.push(mp3buf);\r\n    }\r\n\r\n    // Probably results in native memory copy\r\n    postMessage(mp3Data);\r\n\r\n    // Would like to do this, but not possible because mp3Data is generic array of Uint8Array, and generic\r\n    // arrays are not transferrable types.\r\n    // postMessage(mp3Data, [mp3Data])\r\n\r\n    // This might help if/when ever become available again\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/transfer\r\n\r\n    // For now, though, we have not other option except to build a complete copy in javascript. This means\r\n    // we temporarily require twice the memory of whatever was recorded.\r\n\r\n    mp3Data = [];\r\n  }\r\n\r\n  onmessage = function onmessage(e) {\r\n    if (e.data[0] === 'encode') {\r\n      encode(e.data[1]);\r\n    } else if (e.data[0] === 'dump') {\r\n      dump(e.data[1]);\r\n    } else if (e.data[0] === 'init') {\r\n      init(e.data[1]);\r\n    } else if (e.data[0] === 'close') {\r\n      this.close();\r\n    }\r\n  };\r\n}\r\n","/* eslint-disable */\r\n/* eslint-disable func-names */\r\n/* global Flac */\r\n\r\nexport default function () {\r\n  const workersHost = process.env.PUBLIC_URL || process.env.REACT_APP_WORKERS_HOST || 'https://virufy.org/study';\r\n  importScripts(`${workersHost}/workers/encoders/libflac.dev.js`); // eslint-disable-line\r\n\r\n  let flacEncoder;\r\n  let CHANNELS = 1;\r\n  let SAMPLERATE = 44100;\r\n  let COMPRESSION = 5;\r\n  let BPS = 16;\r\n  let flacOk = 1;\r\n  let flacLength = 0;\r\n  const flacBuffers = [];\r\n  let INIT = false;\r\n  const wavBuffers = [];\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  function writeCallbackFn(buffer, bytes) {\r\n    flacBuffers.push(buffer);\r\n    flacLength += buffer.byteLength;\r\n  }\r\n\r\n  // HELPER: handle initialization of flac encoder\r\n  function initFlac() {\r\n    flacEncoder = Flac.create_libflac_encoder(SAMPLERATE, CHANNELS, BPS, COMPRESSION, 0);\r\n    /// /\r\n    if (flacEncoder !== 0) {\r\n      const statusEncoder = Flac.init_encoder_stream(flacEncoder, writeCallbackFn);\r\n      flacOk &= (statusEncoder == 0);\r\n\r\n      console.log(`flac init     : ${flacOk}`);// DEBUG\r\n      console.log(`status encoder: ${statusEncoder}`);// DEBUG\r\n\r\n      INIT = true;\r\n    } else {\r\n      console.error('Error initializing the encoder.');\r\n    }\r\n  }\r\n\r\n  function init(config) {\r\n    let finalConfig = config;\r\n\r\n    if (!finalConfig) {\r\n      finalConfig = {\r\n        bps: BPS, channels: CHANNELS, samplerate: SAMPLERATE, compression: COMPRESSION,\r\n      };\r\n    }\r\n\r\n    finalConfig.channels = finalConfig.channels ? finalConfig.channels : CHANNELS;\r\n    finalConfig.samplerate = finalConfig.samplerate ? finalConfig.samplerate : SAMPLERATE;\r\n    finalConfig.bps = finalConfig.bps ? finalConfig.bps : BPS;\r\n    finalConfig.compression = finalConfig.compression ? finalConfig.compression : COMPRESSION;\r\n\r\n    /// /\r\n    COMPRESSION = finalConfig.compression;\r\n    BPS = finalConfig.bps;\r\n    SAMPLERATE = finalConfig.samplerate;\r\n    CHANNELS = finalConfig.channels;\r\n    /// /\r\n\r\n    if (!Flac.isReady()) {\r\n      Flac.onready = function () {\r\n        setTimeout(() => {\r\n          initFlac();\r\n        }, 0);\r\n      };\r\n    } else {\r\n      initFlac();\r\n    }\r\n  }\r\n\r\n  // HELPER: actually encode PCM data to Flac\r\n  function doEncodeFlac(audioData) {\r\n    const bufLength = audioData.length;\r\n    const bufferI32 = new Uint32Array(bufLength);\r\n    const view = new DataView(bufferI32.buffer);\r\n    const volume = 1;\r\n    let index = 0;\r\n    for (let i = 0; i < bufLength; i += 1) {\r\n      view.setInt32(index, (audioData[i] * (0x7FFF * volume)), true);\r\n      index += 4;\r\n    }\r\n\r\n    const flacReturn = Flac.FLAC__stream_encoder_process_interleaved(\r\n      flacEncoder, bufferI32, bufferI32.length / CHANNELS,\r\n    );\r\n    if (flacReturn != true) {\r\n      console.log(`Error: encode_buffer_pcm_as_flac returned false. ${flacReturn}`);\r\n    }\r\n  }\r\n\r\n  // HELPER: handle incoming PCM audio data for Flac encoding:\r\n  function encodeFlac(audioData) {\r\n    if (!Flac.isReady()) {\r\n      // if Flac is not ready yet: buffer the audio\r\n      wavBuffers.push(audioData);\r\n      console.info('buffered audio data for Flac encdoing');\r\n    } else {\r\n      if (wavBuffers.length > 0) {\r\n        // if there is buffered audio: encode buffered first (and clear buffer)\r\n\r\n        const len = wavBuffers.length;\r\n        const buffered = wavBuffers.splice(0, len);\r\n        // eslint-disable-next-line no-plusplus\r\n        for (let i = 0; i < len; ++i) {\r\n          doEncodeFlac(buffered[i]);\r\n        }\r\n      }\r\n\r\n      doEncodeFlac(audioData);\r\n    }\r\n  }\r\n\r\n  function mergeBuffersUint8(channelBuffer, recordingLength) {\r\n    const result = new Uint8Array(recordingLength);\r\n    let offset = 0;\r\n    const lng = channelBuffer.length;\r\n    for (let i = 0; i < lng; i += 1) {\r\n      const buffer = channelBuffer[i];\r\n      result.set(buffer, offset);\r\n      offset += buffer.length;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function exportFlacFile(recBuffers, recLength) {\r\n    // convert buffers into one single buffer\r\n    const samples = mergeBuffersUint8(recBuffers, recLength);\r\n\r\n    // var audioBlob = new Blob([samples], { type: type });\r\n    const theBlob = new Blob([samples], { type: 'audio/flac' });\r\n    return theBlob;\r\n  }\r\n\r\n  /*\r\n   * clear recording buffers\r\n   */\r\n  function clear() {\r\n    flacBuffers.splice(0, flacBuffers.length);\r\n    flacLength = 0;\r\n    wavBuffers.splice(0, wavBuffers.length);\r\n  }\r\n\r\n  this.onmessage = function onmessage(e) {\r\n    if (e.data[0] === 'init') {\r\n      init(e.data[1]);\r\n    } else if (e.data[0] === 'encode') {\r\n      encodeFlac(e.data[1]);\r\n    } else if (e.data[0] === 'dump') {\r\n      let data;\r\n      if (!Flac.isReady()) {\r\n        console.error('Flac was not initialized: could not encode data!');\r\n      } else {\r\n        flacOk &= Flac.FLAC__stream_encoder_finish(flacEncoder);\r\n        console.log(`flac finish: ${flacOk}`);// DEBUG\r\n        data = exportFlacFile(flacBuffers, flacLength);\r\n\r\n        Flac.FLAC__stream_encoder_delete(flacEncoder);\r\n      }\r\n\r\n      clear();\r\n\r\n      postMessage(data);\r\n      INIT = false;\r\n    }\r\n  };\r\n}\r\n","/* eslint-disable max-len */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable no-underscore-dangle */\r\n// Vendor Library https://github.com/mogwai/pwa-audio-recorder/tree/master\r\n\r\nimport EncoderWav from './encoder-wav-worker';\r\nimport EncoderMp3 from './encoder-mp3-worker';\r\nimport EncoderFlac from './encoder-flac-worker';\r\n// import EncoderOgg from './encoder-ogg-worker';\r\n\r\nexport default class RecorderService {\r\n  constructor(config) {\r\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\n    this.em = document.createDocumentFragment();\r\n\r\n    this.state = 'inactive';\r\n\r\n    this.chunks = [];\r\n    this.chunkType = '';\r\n\r\n    this.encoderMimeType = 'audio/wav';\r\n\r\n    this.config = {\r\n      broadcastAudioProcessEvents: config.broadcastAudioProcessEvents !== undefined ? config.broadcastAudioProcessEvents : false,\r\n      createAnalyserNode: config.createAnalyserNode !== undefined ? config.createAnalyserNode : false,\r\n      createDynamicsCompressorNode: config.createDynamicsCompressorNode !== undefined ? config.createDynamicsCompressorNode : false,\r\n      forceScriptProcessor: config.forceScriptProcessor !== undefined ? config.forceScriptProcessor : false,\r\n      manualEncoderId: config.manualEncoderId !== undefined ? config.manualEncoderId : 'wav',\r\n      micGain: config.micGain !== undefined ? config.micGain : 1.0,\r\n      processorBufferSize: config.processorBufferSize !== undefined ? config.processorBufferSize : 2048,\r\n      stopTracksAndCloseCtxWhenFinished: config.stopTracksAndCloseCtxWhenFinished !== undefined ? config.stopTracksAndCloseCtxWhenFinished : true,\r\n      usingMediaRecorder: config.usingMediaRecorder !== undefined ? config.usingMediaRecorder : typeof window.MediaRecorder !== 'undefined',\r\n      enableEchoCancellation: config.enableEchoCancellation !== undefined ? config.enableEchoCancellation : true,\r\n      sampleRate: config.sampleRate !== undefined ? config.sampleRate : 44100,\r\n      onRecording: config.onRecording,\r\n      onAudioPress: config.onAudioPress,\r\n    };\r\n\r\n    if (config.onRecording) {\r\n      this.recordingFn = evt => config.onRecording(evt);\r\n      this.em.addEventListener('recording', this.recordingFn);\r\n    }\r\n    if (config.onAudioProcesss) {\r\n      this.onAudioProcessFn = evt => config.onAudioProcesss(evt);\r\n      this.em.addEventListener('onaudioprocess', this.onAudioProcessFn);\r\n    }\r\n  }\r\n\r\n  cleanup = () => {\r\n    if (this.config.onRecording) {\r\n      this.em.removeEventListener('recording', this.recordingFn);\r\n    }\r\n    if (this.config.onAudioProcesss) {\r\n      this.em.removeEventListener('onaudioprocess', this.onAudioProcessFn);\r\n    }\r\n  };\r\n\r\n  createWorker = fn => {\r\n    const js = fn\r\n      .toString()\r\n      .replace(/^function\\s*\\(\\)\\s*{/, '')\r\n      .replace(/}$/, '');\r\n    const blob = new Blob([js]);\r\n    return new Worker(URL.createObjectURL(blob));\r\n  };\r\n\r\n  startRecording = timeslice => {\r\n    if (this.state !== 'inactive') {\r\n      return;\r\n    }\r\n\r\n    // This is the case on ios/chrome, when clicking links from within ios/slack (sometimes), etc.\r\n    if (\r\n      !navigator\r\n      || !navigator.mediaDevices\r\n      || !navigator.mediaDevices.getUserMedia\r\n    ) {\r\n      // alert('Missing support for navigator.mediaDevices.getUserMedia'); // temp: helps when testing for strange issues on ios/safari\r\n      return;\r\n    }\r\n\r\n    this.audioCtx = new AudioContext({\r\n      sampleRate: this.config.sampleRate,\r\n    });\r\n    this.micGainNode = this.audioCtx.createGain();\r\n    this.outputGainNode = this.audioCtx.createGain();\r\n\r\n    if (this.config.createDynamicsCompressorNode) {\r\n      this.dynamicsCompressorNode = this.audioCtx.createDynamicsCompressor();\r\n    }\r\n\r\n    if (this.config.createAnalyserNode) {\r\n      this.analyserNode = this.audioCtx.createAnalyser();\r\n    }\r\n\r\n    // If not using MediaRecorder(i.e. safari and edge), then a script processor is required. It's optional\r\n    // on browsers using MediaRecorder and is only useful if wanting to do custom analysis or manipulation of\r\n    // recorded audio data.\r\n    if (\r\n      this.config.forceScriptProcessor\r\n      || this.config.broadcastAudioProcessEvents\r\n      || !this.config.usingMediaRecorder\r\n    ) {\r\n      this.processorNode = this.audioCtx.createScriptProcessor(\r\n        this.config.processorBufferSize,\r\n        1,\r\n        1,\r\n      ); // TODO: Get the number of channels from mic\r\n    }\r\n\r\n    // Create stream destination on chrome/firefox because, AFAICT, we have no other way of feeding audio graph output\r\n    // in to MediaRecorderSafari/Edge don't have this method as of 2018-04.\r\n    if (this.audioCtx.createMediaStreamDestination) {\r\n      this.destinationNode = this.audioCtx.createMediaStreamDestination();\r\n    } else {\r\n      this.destinationNode = this.audioCtx.destination;\r\n    }\r\n\r\n    // Create web worker for doing the encoding\r\n    if (!this.config.usingMediaRecorder) {\r\n      if (this.config.manualEncoderId === 'mp3') {\r\n        this.encoderWorker = this.createWorker(EncoderMp3);\r\n        const baseUrl = process.env.PUBLIC_URL || 'https://virufy.org/study';\r\n        this.encoderWorker.postMessage([\r\n          'init',\r\n          { baseUrl, sampleRate: this.audioCtx.sampleRate },\r\n        ]);\r\n        this.encoderMimeType = 'audio/mpeg';\r\n      } else if (this.config.manualEncoderId === 'flac') {\r\n        this.encoderWorker = this.createWorker(EncoderFlac);\r\n        this.encoderWorker.postMessage([\r\n          'init',\r\n          { sampleRate: this.audioCtx.sampleRate },\r\n        ]);\r\n        this.encoderMimeType = 'audio/flac';\r\n      } else {\r\n        this.encoderWorker = this.createWorker(EncoderWav);\r\n        this.encoderMimeType = 'audio/wav';\r\n      }\r\n      this.encoderWorker.addEventListener('message', e => {\r\n        const event = new Event('dataavailable');\r\n        if (this.config.manualEncoderId === 'ogg' || this.config.manualEncoderId === 'flac') {\r\n          event.data = e.data;\r\n        } else {\r\n          event.data = new Blob(e.data, { type: this.encoderMimeType });\r\n        }\r\n        this._onDataAvailable(event);\r\n      });\r\n    }\r\n\r\n    // Setup media constraints\r\n    const userMediaConstraints = {\r\n      audio: {\r\n        echoCancellation: this.config.enableEchoCancellation,\r\n      },\r\n    };\r\n    if (this.config.deviceId) {\r\n      userMediaConstraints.audio.deviceId = this.config.deviceId;\r\n    }\r\n\r\n    // This will prompt user for permission if needed\r\n    return navigator.mediaDevices\r\n      .getUserMedia(userMediaConstraints)\r\n      .then(stream => {\r\n        this._startRecordingWithStream(stream, timeslice);\r\n      })\r\n      .catch(error => {\r\n        // alert(`Error with getUserMedia: ${error.message}`); // temp: helps when testing for strange issues on ios/safari\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  setMicGain = newGain => {\r\n    this.config.micGain = newGain;\r\n    if (this.audioCtx && this.micGainNode) {\r\n      this.micGainNode.gain.setValueAtTime(newGain, this.audioCtx.currentTime);\r\n    }\r\n  };\r\n\r\n  _startRecordingWithStream = (stream, timeslice) => {\r\n    this.micAudioStream = stream;\r\n\r\n    this.inputStreamNode = this.audioCtx.createMediaStreamSource(\r\n      this.micAudioStream,\r\n    );\r\n    this.audioCtx = this.inputStreamNode.context;\r\n\r\n    // Kind-of a hack to allow hooking in to audioGraph inputStreamNode\r\n    if (this.onGraphSetupWithInputStream) {\r\n      this.onGraphSetupWithInputStream(this.inputStreamNode);\r\n    }\r\n\r\n    this.inputStreamNode.connect(this.micGainNode);\r\n    this.micGainNode.gain.setValueAtTime(\r\n      this.config.micGain,\r\n      this.audioCtx.currentTime,\r\n    );\r\n\r\n    let nextNode = this.micGainNode;\r\n    if (this.dynamicsCompressorNode) {\r\n      this.micGainNode.connect(this.dynamicsCompressorNode);\r\n      nextNode = this.dynamicsCompressorNode;\r\n    }\r\n\r\n    this.state = 'recording';\r\n\r\n    if (this.processorNode) {\r\n      nextNode.connect(this.processorNode);\r\n      this.processorNode.connect(this.outputGainNode);\r\n      this.processorNode.onaudioprocess = e => this._onAudioProcess(e);\r\n    } else {\r\n      nextNode.connect(this.outputGainNode);\r\n    }\r\n\r\n    if (this.analyserNode) {\r\n      // TODO: If we want the analyser node to receive the processorNode's output, this needs to be changed _and_\r\n      //       processor node needs to be modified to copy input to output. It currently doesn't because it's not\r\n      //       needed when doing manual encoding.\r\n      // this.processorNode.connect(this.analyserNode)\r\n      nextNode.connect(this.analyserNode);\r\n    }\r\n\r\n    this.outputGainNode.connect(this.destinationNode);\r\n\r\n    if (this.config.usingMediaRecorder) {\r\n      this.mediaRecorder = new MediaRecorder(this.destinationNode.stream, { mimeType: this.encoderMimeType });\r\n      this.mediaRecorder.addEventListener('dataavailable', evt => this._onDataAvailable(evt));\r\n      this.mediaRecorder.addEventListener('error', evt => this._onError(evt));\r\n\r\n      this.mediaRecorder.start(timeslice);\r\n    } else {\r\n      // Output gain to zero to prevent feedback. Seems to matter only on Edge, though seems like should matter\r\n      // on iOS too.  Matters on chrome when connecting graph to directly to audioCtx.destination, but we are\r\n      // not able to do that when using MediaRecorder.\r\n      this.outputGainNode.gain.setValueAtTime(0, this.audioCtx.currentTime);\r\n      // this.outputGainNode.gain.value = 0\r\n\r\n      // Todo: Note that time slicing with manual wav encoderWav won't work. To allow it would require rewriting the encoderWav\r\n      // to assemble all chunks at end instead of adding header to each chunk.\r\n      if (timeslice) {\r\n        console.log(\r\n          'Time slicing without MediaRecorder is not yet supported. The resulting recording will not be playable.',\r\n        );\r\n        this.slicing = setInterval(function anon() {\r\n          if (this.state === 'recording') {\r\n            this.encoderWorker.postMessage(['dump', this.context.sampleRate]);\r\n          }\r\n        }, timeslice);\r\n      }\r\n    }\r\n  };\r\n\r\n  _onAudioProcess = e => {\r\n    // console.log('onaudioprocess', e)\r\n    // let inputBuffer = e.inputBuffer\r\n    // let outputBuffer = e.outputBuffer\r\n    // console.log(this.micAudioStream)\r\n    // console.log(this.audioCtx)\r\n    // console.log(this.micAudioStream.getTracks().forEach((track) => console.log(track)))\r\n\r\n    // this.onAudioEm.dispatch(new Event('onaudioprocess', {inputBuffer:inputBuffer,outputBuffer:outputBuffer}))\r\n\r\n    if (this.config.broadcastAudioProcessEvents) {\r\n      this.em.dispatchEvent(\r\n        new CustomEvent('onaudioprocess', {\r\n          detail: {\r\n            inputBuffer: e.inputBuffer,\r\n            outputBuffer: e.outputBuffer,\r\n          },\r\n        }),\r\n      );\r\n    }\r\n\r\n    // // Example handling:\r\n    // let inputBuffer = e.inputBuffer\r\n    // let outputBuffer = e.outputBuffer\r\n    // // Each channel (usually only one)\r\n    // for (let channel = 0; channel < outputBuffer.numberOfChannels; channel++) {\r\n    //   let inputData = inputBuffer.getChannelData(channel)\r\n    //   let outputData = outputBuffer.getChannelData(channel)\r\n    //\r\n    //   // Each sample\r\n    //   for (let sample = 0; sample < inputBuffer.length; sample++) {\r\n    //     // Make output equal to the same as the input (thus processor is doing nothing at this time)\r\n    //     outputData[sample] = inputData[sample]\r\n    //   }\r\n    // }\r\n\r\n    // When manually encoding (safari/edge), there's no reason to copy data to output buffer.  We set the output\r\n    // gain to 0 anyways (which is required on Edge if we did copy data to output). However, if using a MediaRecorder\r\n    // and a processor (all other browsers), then it would be required to copy the data otherwise the graph would\r\n    // generate no data for the MediaRecorder to consume.\r\n    // if (this.forceScriptProcessor) {\r\n\r\n    // // Copy input to output\r\n    // let inputBuffer = e.inputBuffer\r\n    // let outputBuffer = e.outputBuffer\r\n    // // This doesn't work on iOS/Safari. Guessing it doesn't have copyToChannel support, but haven't verified.\r\n    // for (let channel = 0; channel < outputBuffer.numberOfChannels; channel++) {\r\n    //   outputBuffer.copyToChannel(inputBuffer.getChannelData(channel), channel)\r\n    // }\r\n\r\n    // Safari and Edge require manual encoding via web worker. Single channel only for now.\r\n    // Example stereo encoderWav: https://github.com/MicrosoftEdge/Demos/blob/master/microphone/scripts/recorderworker.js\r\n    if (!this.config.usingMediaRecorder) {\r\n      if (this.state === 'recording') {\r\n        if (this.config.broadcastAudioProcessEvents) {\r\n          this.encoderWorker.postMessage([\r\n            'encode',\r\n            e.outputBuffer.getChannelData(0),\r\n          ]);\r\n        } else {\r\n          this.encoderWorker.postMessage([\r\n            'encode',\r\n            e.inputBuffer.getChannelData(0),\r\n          ]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  stopRecording = () => {\r\n    if (this.state === 'inactive') {\r\n      return;\r\n    }\r\n    if (this.config.usingMediaRecorder) {\r\n      this.state = 'inactive';\r\n      this.mediaRecorder.stop();\r\n    } else {\r\n      this.state = 'inactive';\r\n      this.encoderWorker.postMessage(['dump', this.audioCtx.sampleRate]);\r\n      clearInterval(this.slicing);\r\n\r\n      // TODO: There should be a more robust way to handle this\r\n      // Without something like this, I think  the last recorded sample could be lost due to timing\r\n      // setTimeout(() => {\r\n      //   this.state = 'inactive'\r\n      //   this.encoderWorker.postMessage(['dump', this.audioCtx.sampleRate])\r\n      // }, 100)\r\n    }\r\n  };\r\n\r\n  _onDataAvailable = evt => {\r\n    // console.log('state', this.mediaRecorder.state)\r\n    // console.log('evt.data', evt.data)\r\n\r\n    this.chunks.push(evt.data);\r\n    this.chunkType = evt.data.type;\r\n\r\n    if (this.state !== 'inactive') {\r\n      return;\r\n    }\r\n\r\n    const blob = new Blob(this.chunks, { type: this.chunkType });\r\n    const blobUrl = URL.createObjectURL(blob);\r\n    const recording = {\r\n      ts: new Date().getTime(),\r\n      blobUrl,\r\n      mimeType: blob.type,\r\n      size: blob.size,\r\n    };\r\n\r\n    this.chunks = [];\r\n    this.chunkType = null;\r\n\r\n    if (this.destinationNode) {\r\n      this.destinationNode.disconnect();\r\n      this.destinationNode = null;\r\n    }\r\n    if (this.outputGainNode) {\r\n      this.outputGainNode.disconnect();\r\n      this.outputGainNode = null;\r\n    }\r\n    if (this.analyserNode) {\r\n      this.analyserNode.disconnect();\r\n      this.analyserNode = null;\r\n    }\r\n    if (this.processorNode) {\r\n      this.processorNode.disconnect();\r\n      this.processorNode = null;\r\n    }\r\n    if (this.encoderWorker) {\r\n      this.encoderWorker.postMessage(['close']);\r\n      this.encoderWorker = null;\r\n    }\r\n    if (this.dynamicsCompressorNode) {\r\n      this.dynamicsCompressorNode.disconnect();\r\n      this.dynamicsCompressorNode = null;\r\n    }\r\n    if (this.micGainNode) {\r\n      this.micGainNode.disconnect();\r\n      this.micGainNode = null;\r\n    }\r\n    if (this.inputStreamNode) {\r\n      this.inputStreamNode.disconnect();\r\n      this.inputStreamNode = null;\r\n    }\r\n\r\n    if (this.config.stopTracksAndCloseCtxWhenFinished) {\r\n      // This removes the red bar in iOS/Safari\r\n      this.micAudioStream.getTracks().forEach(track => track.stop());\r\n      this.micAudioStream = null;\r\n\r\n      this.audioCtx.close();\r\n      this.audioCtx = null;\r\n    }\r\n\r\n    this.em.dispatchEvent(\r\n      new CustomEvent('recording', { detail: { recording } }),\r\n    );\r\n  };\r\n\r\n  _onError = evt => {\r\n    console.log('error', evt);\r\n    this.em.dispatchEvent(new Event('error'));\r\n    // alert(`error:${evt}`); // for debugging purposes\r\n  };\r\n}\r\n","import styled from 'styled-components';\r\nimport { colors } from 'theme';\r\n\r\nexport const MicRecorderContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const MicButtonsContainer = styled.div`\r\n  display:flex;\r\n  justify-content: space-between;\r\n  width: 144px;\r\n  margin: auto;\r\n`;\r\n\r\nexport const MicButtonWithText = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const MicNote = styled.p`\r\n  font-size: 14px;\r\n  color: ${colors.lightDarkGray};\r\n  margin-top: 8px;\r\n  margin-bottom: 0px;\r\n`;\r\nexport const MicRecorderButton = styled.button<{ disabled?: boolean; opacity?: boolean}>`\r\n  background-color: ${colors.purple};\r\n  width: 56px;\r\n  height: 56px;\r\n  position: relative;\r\n  outline: none !important;\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  transition: background-color 0.25s;\r\n  opacity: ${props => (props.disabled || props.opacity ? '0.5' : '1')};\r\n\r\n  @supports not (-webkit-touch-callout: none) {\r\n    /* CSS for other than iOS devices */\r\n    -webkit-tap-highlight-color: transparent;\r\n  }\r\n\r\n  &:active {\r\n    background-color: ${colors.purple};\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: transparent;\r\n    z-index: 1;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\r\n    width: 66px;\r\n    height: 66px;\r\n  }\r\n`;\r\n\r\nexport const MicRecorderImage = styled.img`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  transition: opacity 0.25s;\r\n`;\r\n\r\nexport const MicRecorderStartImage = styled(MicRecorderImage)`\r\n  width: 27px;\r\n  height: 27px;\r\n`;\r\n\r\nexport const MicRecorderStopImage = styled(MicRecorderImage)`\r\n  width: 15px;\r\n  height: 15px;\r\n`;\r\n\r\nexport const MicRecorderTimerContainer = styled.div`\r\n  width: 70px;\r\n  height: 41px;\r\n  font-size: 1.25rem;\r\n  color: ${colors.purple};\r\n  font-weight: bold;\r\n  font-family: 'Source Sans Pro';\r\n  border: 1px solid ${colors.purple};\r\n  border-radius: 15px;\r\n  display: flex; \r\n  align-items: center; \r\n  justify-content: center; \r\n  margin-bottom: 28px;\r\n\r\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\r\n    font-size: 1.75rem;\r\n    margin-top: 22px;\r\n  }\r\n`;\r\n\r\nexport const MicRecorderTimerReleaseTextContainer = styled.div`\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  color: ${colors.red};\r\n  font-family: 'Source Sans Pro';\r\n  display: flex; \r\n  margin-left: 20px;\r\n  margin-top:10px;\r\n`;\r\n\r\nexport const MicRecorderTextP = styled.p<{ show?: boolean }>`\r\n  visibility: ${props => (props.show ? 'flex' : 'hidden')};\r\n`;\r\n","/* eslint-disable react/require-default-props */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React from 'react';\r\nimport Timer from 'react-compound-timer';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// Sentry\r\nimport * as Sentry from '@sentry/react';\r\n\r\n// Utils\r\nimport RecorderService from 'helper/audio/RecorderService';\r\nimport FileHelper from 'helper/fileHelper';\r\nimport { getDuration } from 'helper/getDuration';\r\n\r\n// Modals\r\nimport RecordErrorModal from 'modals/RecordErrorModal';\r\n\r\n// Images\r\nimport StartSVG from 'assets/icons/start.svg';\r\nimport StopSVG from 'assets/icons/stop.svg';\r\n\r\n// Styles\r\nimport {\r\n  MicRecorderContainer,\r\n  MicRecorderButton,\r\n  MicRecorderStartImage,\r\n  MicRecorderStopImage,\r\n  MicRecorderTimerContainer,\r\n  MicRecorderTimerReleaseTextContainer,\r\n  MicRecorderTextP,\r\n  MicButtonsContainer,\r\n  MicButtonWithText,\r\n  MicNote,\r\n} from './style';\r\n\r\ninterface MicRecorderProps {\r\n  className?: string;\r\n  maxTimeInSeconds?: number;\r\n  minTimeInSeconds?: number;\r\n  onNewRecord: (file: File, humanReadableSize: string) => void;\r\n  delay?: number;\r\n  recordingFile: any;\r\n  isShortAudioCollection?: boolean;\r\n}\r\n\r\nconst baseConfig = {\r\n  usingMediaRecorder: false,\r\n  sampleRate: 48000,\r\n  manualEncoderId: 'wav', // wav / mp3 / flac\r\n  processorBufferSize: 2048, // 4096 flac / 2048 wav\r\n};\r\nexport interface RecorderServiceType {\r\n  config: {\r\n    broadcastAudioProcessEvents: boolean; // default: false\r\n    createAnalyserNode: boolean; // default: false\r\n    createDynamicsCompressorNode: boolean; // default: false\r\n    forceScriptProcessor: false; // default: false\r\n    manualEncoderId: string; // default: 'wav'\r\n    micGain: number; // default: 1.0\r\n    processorBufferSize: number; // default: 2048\r\n    stopTracksAndCloseCtxWhenFinished: boolean; // default: true\r\n    usingMediaRecorder: boolean; // default: typeof window.MediaRecorder !== 'undefined'\r\n    enableEchoCancellation: boolean; // default: true\r\n    sampleRate: number; // default: 44100\r\n  };\r\n  em: DocumentFragment;\r\n  startRecording: (timeslice?: number) => Promise<void>;\r\n  stopRecording: () => void;\r\n  cleanup: () => void;\r\n}\r\n\r\nconst MicRecorder = ({\r\n  className = '',\r\n  maxTimeInSeconds = 30, // 30 segs\r\n  minTimeInSeconds = 5, // 5 segs\r\n  onNewRecord,\r\n  delay = 500, // 500ms\r\n  recordingFile,\r\n  isShortAudioCollection,\r\n}: MicRecorderProps) => {\r\n  // Hooks\r\n  const { t } = useTranslation();\r\n\r\n  // Refs\r\n  const recordingService = React.useRef<RecorderServiceType>();\r\n  const audioSamples = React.useRef<number>(0);\r\n  const timerRef = React.useRef<any>();\r\n  const timeout = React.useRef<number>();\r\n  const target = React.useRef<HTMLButtonElement>();\r\n\r\n  // States\r\n  const [micAllowed, setMicAllowed] = React.useState<boolean>(true);\r\n  const [recordingInProgress, setRecordingInProgress] = React.useState<boolean>();\r\n  const [showReleaseText, setShowReleaseText] = React.useState<boolean>(false);\r\n  const [showShortRecordingText, setShowShortRecordingText] = React.useState<boolean>(false);\r\n  const [longPressTriggered, setLongPressTriggered] = React.useState<boolean>(false);\r\n\r\n  // Handlers\r\n  const onAudioProcess = React.useCallback((e: any) => {\r\n    audioSamples.current += 1;\r\n    const { inputBuffer, outputBuffer } = e.detail;\r\n    for (let channel = 0; channel < outputBuffer.numberOfChannels; channel += 1) {\r\n      const inputData = inputBuffer.getChannelData(channel);\r\n      const outputData = outputBuffer.getChannelData(channel);\r\n      // Each sample\r\n      for (let sample = 0; sample < inputBuffer.length; sample += 1) {\r\n        outputData[sample] = inputData[sample];\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const onNewRecording = React.useCallback(async (e: any) => {\r\n    const { detail } = e;\r\n    const { recording } = detail;\r\n    const blob = await fetch(recording.blobUrl).then(r => r.blob());\r\n    const fileName = `Filename.${baseConfig.manualEncoderId}`;\r\n    const file = FileHelper.blobToFile(blob, fileName);\r\n    const humanReadableSize = FileHelper.sizeAsHuman(file.size, true);\r\n\r\n    onNewRecord(file, humanReadableSize);\r\n  }, [onNewRecord]);\r\n\r\n  // Effects\r\n  React.useEffect(() => {\r\n    recordingService.current = new RecorderService({\r\n      ...baseConfig,\r\n      sampleRate: isShortAudioCollection ? 16000 : baseConfig.sampleRate,\r\n      onRecording: onNewRecording,\r\n      onAudioProcesss: onAudioProcess,\r\n    }) as RecorderServiceType;\r\n\r\n    const userMediaConstraints = {\r\n      audio: {\r\n        echoCancellation: recordingService.current.config.enableEchoCancellation,\r\n      },\r\n    };\r\n    navigator.mediaDevices.getUserMedia(userMediaConstraints)\r\n      .then(() => {\r\n        setMicAllowed(true);\r\n      })\r\n      .catch(err => {\r\n        setMicAllowed(false);\r\n        Sentry.captureException(err);\r\n      });\r\n\r\n    if (recordingFile) {\r\n      const file = recordingFile as File;\r\n      if (file.size) {\r\n        const audio = new Audio(URL.createObjectURL(file));\r\n        audio.defaultMuted = true;\r\n        audio.muted = true;\r\n        audio.load();\r\n        const listenerFn = async () => {\r\n          audio.removeEventListener('loadedmetadata', listenerFn);\r\n          getDuration(audio, true).then(result => {\r\n            timerRef.current?.setTime(result * 1000);\r\n          });\r\n        };\r\n        audio.addEventListener('loadedmetadata', listenerFn);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (recordingService.current) {\r\n        recordingService.current.cleanup();\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Handlers\r\n  const handleStartRecording = React.useCallback(() => {\r\n    if (recordingService.current) {\r\n      audioSamples.current = 0;\r\n      recordingService.current\r\n        .startRecording()\r\n        .then(() => {\r\n          setRecordingInProgress(true);\r\n          setShowShortRecordingText(false);\r\n          if (timerRef.current) {\r\n            timerRef.current.reset();\r\n            timerRef.current?.setTime(0);\r\n            timerRef.current.start();\r\n          }\r\n        })\r\n        .catch((error: any) => console.error('ERROR', error));\r\n    }\r\n  }, []);\r\n\r\n  const handleStopRecording = React.useCallback(() => {\r\n    if (recordingService.current) {\r\n      recordingService.current.stopRecording();\r\n      setRecordingInProgress(false);\r\n      if (timerRef.current) {\r\n        if (timerRef.current.getTime() / 1000 < minTimeInSeconds) {\r\n          setShowShortRecordingText(true);\r\n        }\r\n        timerRef.current.stop();\r\n      }\r\n    }\r\n  }, [minTimeInSeconds]);\r\n\r\n  const handleFormatValue = React.useCallback((value: number) => (value < 10 ? `0${value}` : value), []);\r\n\r\n  const preventDefault = (event: any) => {\r\n    if (!('touches' in event)) event.preventDefault();\r\n  };\r\n\r\n  const handleStartLongPress = React.useCallback(\r\n    event => {\r\n      if (event.target) {\r\n        event.target.addEventListener('touchend', preventDefault, {\r\n          passive: false,\r\n        });\r\n        target.current = event.target;\r\n      }\r\n      timeout.current = setTimeout(() => {\r\n        setShowReleaseText(true);\r\n        setLongPressTriggered(true);\r\n        setShowShortRecordingText(false);\r\n      }, delay);\r\n    },\r\n    [delay],\r\n  );\r\n\r\n  const handleEndLongPress = React.useCallback(() => {\r\n    if (timeout.current) {\r\n      clearTimeout(timeout.current);\r\n    }\r\n    if (longPressTriggered) {\r\n      setShowReleaseText(false);\r\n    }\r\n    setLongPressTriggered(false);\r\n    if (target.current) {\r\n      target.current.removeEventListener('touchend', preventDefault);\r\n    }\r\n  },\r\n  [longPressTriggered]);\r\n\r\n  return (\r\n    <MicRecorderContainer className={className}>\r\n      <MicRecorderTimerReleaseTextContainer>\r\n        {!showShortRecordingText\r\n          && (\r\n            <MicRecorderTextP\r\n              show={showReleaseText}\r\n            >\r\n              {recordingInProgress ? t('recordingsIntroduction:releaseButtonStop') : t('recordingsIntroduction:releaseButtonStart')}\r\n            </MicRecorderTextP>\r\n          )}\r\n        <RecordErrorModal\r\n          isOpen={showShortRecordingText}\r\n          modalTitle=\"Oops.\"\r\n          onConfirm={handleStartRecording}\r\n        >\r\n          {t('recordingsIntroduction:shortRecording', { seconds: minTimeInSeconds })}\r\n        </RecordErrorModal>\r\n      </MicRecorderTimerReleaseTextContainer>\r\n      <MicRecorderTimerContainer>\r\n        <Timer\r\n          ref={timerRef}\r\n          startImmediately={false}\r\n          checkpoints={[\r\n            {\r\n              time: maxTimeInSeconds * 1000,\r\n              callback: handleStopRecording,\r\n            },\r\n          ]}\r\n        >\r\n          <Timer.Minutes />\r\n          :\r\n          <Timer.Seconds formatValue={handleFormatValue} />\r\n        </Timer>\r\n      </MicRecorderTimerContainer>\r\n      <MicButtonsContainer>\r\n        <MicButtonWithText>\r\n          <MicRecorderButton\r\n            disabled={!micAllowed || recordingInProgress}\r\n            onClick={handleStartRecording}\r\n            onMouseDown={handleStartLongPress}\r\n            onMouseUp={handleEndLongPress}\r\n            onTouchStart={handleStartLongPress}\r\n            onTouchEnd={handleEndLongPress}\r\n            onMouseLeave={handleEndLongPress}\r\n          >\r\n            <MicRecorderStartImage\r\n              src={StartSVG}\r\n              alt=\"Start\"\r\n            />\r\n          </MicRecorderButton>\r\n          <MicNote>{t('recordingsRecord:record')}</MicNote>\r\n        </MicButtonWithText>\r\n        <MicButtonWithText>\r\n          <MicRecorderButton\r\n            disabled={!micAllowed || !recordingInProgress}\r\n            onClick={handleStopRecording}\r\n            onMouseDown={handleStartLongPress}\r\n            onMouseUp={handleEndLongPress}\r\n            onTouchStart={handleStartLongPress}\r\n            onTouchEnd={handleEndLongPress}\r\n            onMouseLeave={handleEndLongPress}\r\n          >\r\n            <MicRecorderStopImage\r\n              src={StopSVG}\r\n              alt=\"Stop\"\r\n            />\r\n          </MicRecorderButton>\r\n          <MicNote>{t('recordingsRecord:recordStop')}</MicNote>\r\n        </MicButtonWithText>\r\n      </MicButtonsContainer>\r\n    </MicRecorderContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(MicRecorder);\r\n","import React from 'react';\r\nimport usePortal from 'react-useportal';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// Form\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport Yup from 'utils/yup';\r\n\r\n// Components\r\nimport MicRecorder from 'components/MicRecorder';\r\nimport WizardButtons from 'components/WizardButtons';\r\n\r\n// Images\r\nimport UploadSVG from 'assets/icons/upload.svg';\r\n\r\n// Styles\r\nimport {\r\n  MainContainer,\r\n  UploadContainer,\r\n  UploadImage,\r\n  UploadText,\r\n  MicContainer,\r\n} from './style';\r\n\r\nconst audioMaxSizeInMb = 5;\r\nconst audioMinLength: CommonJSON<number> = {\r\n  recordYourBreath: 5,\r\n  recordYourSpeech: 5,\r\n  recordYourCough: 3,\r\n}; // in seconds\r\n\r\nconst schema = Yup.object({\r\n  recordingFile: Yup.mixed()\r\n    .required('ERROR.FILE_REQUIRED')\r\n    // @ts-ignore\r\n    .validateAudioSize(audioMaxSizeInMb)\r\n    // @ts-ignore\r\n    .when('$_currentLogic', (value: string, _schema: Yup.MixedSchema) => _schema.validateAudioLength(audioMinLength[value] || 5)),\r\n}).defined();\r\n\r\ntype RecordType = Yup.InferType<typeof schema>;\r\n\r\ninterface RecordProps {\r\n  // isCoughLogic: boolean,\r\n  onNext: (values: RecordType) => void;\r\n  onManualUpload: () => void;\r\n  defaultValues: RecordType;\r\n  currentLogic: string;\r\n  action:any;\r\n  isShortAudioCollection?: boolean;\r\n}\r\n\r\nconst Record = ({\r\n  onNext,\r\n  onManualUpload,\r\n  defaultValues,\r\n  currentLogic,\r\n  action,\r\n  isShortAudioCollection,\r\n}: RecordProps) => {\r\n  // Hooks\r\n  const { Portal } = usePortal({\r\n    bindTo:\r\n      document && (document.getElementById('wizard-buttons') as HTMLDivElement),\r\n  });\r\n  const {\r\n    handleSubmit, control, getValues, formState,\r\n  } = useForm({\r\n    mode: 'onChange',\r\n    defaultValues,\r\n    context: {\r\n      _currentLogic: currentLogic,\r\n    },\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const { isValid } = formState;\r\n\r\n  // Refs\r\n  const micKey = React.useRef<number>(1);\r\n\r\n  const onManualUploadWithFile = () => {\r\n    action({\r\n      [currentLogic]: {\r\n        recordingFile: getValues('recordingFile') || null,\r\n        uploadedFile: null,\r\n      },\r\n    });\r\n    onManualUpload?.();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainContainer>\r\n        <MicContainer>\r\n          <Controller\r\n            control={control}\r\n            name=\"recordingFile\"\r\n            render={({ onChange }) => (\r\n              <MicRecorder\r\n                key={micKey.current} // On delete, easy re-mount a new mic recorder\r\n                onNewRecord={onChange}\r\n                recordingFile={defaultValues?.recordingFile}\r\n                minTimeInSeconds={audioMinLength[currentLogic]}\r\n                isShortAudioCollection={isShortAudioCollection}\r\n              />\r\n            )}\r\n          />\r\n        </MicContainer>\r\n\r\n        <Portal>\r\n          <WizardButtons\r\n            invert\r\n            leftLabel={t('recordingsRecord:next')}\r\n            leftDisabled={!isValid}\r\n            leftHandler={handleSubmit(onNext)}\r\n          />\r\n          <UploadContainer onClick={onManualUploadWithFile}>\r\n            <UploadImage src={UploadSVG} />\r\n            <UploadText>{t('recordingsRecord:upload')}</UploadText>\r\n          </UploadContainer>\r\n        </Portal>\r\n\r\n      </MainContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Record);\r\n","import * as Yup from 'yup';\r\nimport { getDuration } from '../helper/getDuration';\r\n// import { isSafari } from 'react-device-detect';\r\n\r\nYup.addMethod(Yup.mixed, 'validateAudioLength', function validate(maxDuration: number) {\r\n  // @ts-ignore\r\n  return this.test('fileDuration', 'ERROR.FILE_DURATION', async (value?: any) => {\r\n    if (value) {\r\n      const file = value as File;\r\n      const audio = new Audio(URL.createObjectURL(file));\r\n      audio.defaultMuted = true;\r\n      audio.muted = true;\r\n      audio.load();\r\n      await new Promise(resolver => audio.addEventListener('loadedmetadata', resolver));\r\n      const duration = await getDuration(audio);\r\n      return (duration >= maxDuration);\r\n    }\r\n    return !!value;\r\n  });\r\n});\r\n\r\nYup.addMethod(Yup.mixed, 'validateAudioSize', function validate(audioMaxSizeInMb: number) {\r\n  // @ts-ignore\r\n  return this.test('fileSize', 'ERROR.FILE_SIZE', (value?: any) => {\r\n    if (value) {\r\n      const file = value as File;\r\n      const { size } = file;\r\n      return (size <= 1024 ** 3 * audioMaxSizeInMb);\r\n    }\r\n    return !!value;\r\n  });\r\n});\r\n\r\nexport default Yup;\r\n","/* eslint-disable no-plusplus */\r\n/* eslint-disable no-param-reassign */\r\n\r\nconst sizeAsHuman = (bytes: number, si?: boolean) => {\r\n  const thresh = si ? 1000 : 1024;\r\n  if (Math.abs(bytes) < thresh) {\r\n    return `${bytes} B`;\r\n  }\r\n  const units = si\r\n    ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\r\n    : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\r\n  let u = -1;\r\n  do {\r\n    bytes /= thresh;\r\n    ++u;\r\n  } while (Math.abs(bytes) >= thresh && u < units.length - 1);\r\n  return `${bytes.toFixed(1)} ${units[u]}`;\r\n};\r\n\r\nconst blobToFile = (theBlob: Blob, fileName:string): File => {\r\n  const b: any = theBlob;\r\n  // A Blob() is almost a File() - it's just missing the two properties below which we will add\r\n  b.lastModifiedDate = new Date();\r\n  b.name = fileName;\r\n\r\n  // Cast to a File() type\r\n  return theBlob as File;\r\n};\r\n\r\nexport default {\r\n  sizeAsHuman,\r\n  blobToFile,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ModalBody = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\r\n    margin: auto;\r\n`;\r\n\r\nexport const ModalTitle = styled.div`\r\n  font-family: 'Biko';\r\n  font-size: 30px;\r\n  line-height: 30px;\r\n  margin-bottom: 10px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  font-family: 'Source Sans Pro';\r\n  text-align: center;\r\n  line-height: 25px;\r\n  font-size: 18px;\r\n  margin-top: 10px;\r\n  margin-bottom: 30px;\r\n`;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { PropsWithChildren } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Button from 'components/Button';\r\n\r\n// Style\r\nimport {\r\n  ModalBody, ModalTitle, ModalContent,\r\n} from './style';\r\n\r\nexport interface ConfirmationModalProps {\r\n  isOpen: boolean;\r\n  modalTitle: string;\r\n  onConfirm?: () => void;\r\n}\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst RecordErrorModal = React.memo(({\r\n  modalTitle,\r\n  children,\r\n  onConfirm,\r\n  ...props\r\n}: PropsWithChildren<ConfirmationModalProps>) => {\r\n  // Handlers\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const customStyles = {\r\n    content: {\r\n      height: '281px',\r\n      maxWidth: '348px',\r\n      margin: 'auto',\r\n      borderRadius: '10px',\r\n      border: 'none',\r\n    },\r\n    overlay: { backgroundColor: 'rgba(0, 0, 0, 0.5)' },\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      style={customStyles}\r\n    >\r\n      <ModalBody className=\"ModalBody\">\r\n        <ModalTitle>{modalTitle}</ModalTitle>\r\n        <ModalContent>{children}</ModalContent>\r\n        <Button onClick={onConfirm} dark>\r\n          {t('recordingsIntroduction:retryButton', 'Retry')}\r\n        </Button>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default RecordErrorModal;\r\n","import styled from 'styled-components';\r\nimport { BlackText } from 'components/Texts';\r\nimport { colors } from 'theme';\r\n\r\nimport StopSVG from 'assets/icons/stop.svg';\r\n\r\nexport const MainContainer = styled.div`\r\n  padding: 40px 0px;\r\n`;\r\n\r\nexport const Text = styled(BlackText)`\r\n  color: ${props => props.theme.colors.darkBlack};\r\n  margin-bottom: 2px;\r\n  text-align: left;\r\n\r\n  @media screen and (${props => props.theme.breakpoints.tablet}){\r\n    max-width: 470px;\r\n    margin: 0 auto;\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media screen and (${props => props.theme.breakpoints.tablet}){\r\n    @media (orientation: portrait) {\r\n      margin-bottom: 248px;\r\n    }\r\n\r\n    @media (orientation: landscape) {\r\n      margin-bottom: 24px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MicContainer = styled.div``;\r\n\r\nexport const UploadContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5px 20px 12px;\r\n  width: fit-content;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (${props => props.theme.breakpoints.tablet}){\r\n    padding: 22px;\r\n  }\r\n`;\r\n\r\nexport const UploadImage = styled.img`\r\n  cursor: pointer;\r\n  width: 13px;\r\n  height: 12px;\r\n  margin-right: 7px;\r\n`;\r\n\r\nexport const UploadText = styled.div`\r\n  cursor: pointer;\r\n  font-family: Source Sans Pro;\r\n  font-weight: bold;\r\n  font-size: 0.75rem;\r\n  line-height: 24px;\r\n  color: ${colors.darkBlack};\r\n`;\r\n\r\nexport const StopImg = styled.img.attrs(() => ({ src: StopSVG }))`\r\n  display: inline;\r\n  height: 10px;\r\n  margin: 0px 2px 4px;\r\n`;\r\n","module.exports = __webpack_public_path__ + \"static/media/start.56f6c7e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.8ab18ba2.svg\";"],"sourceRoot":""}
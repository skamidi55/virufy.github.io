{"version":3,"sources":["helper/stepsDefinitions.ts","components/Layout/Layout.ts","components/Wizard/style.ts","components/Wizard/Wizard.tsx","containers/SubmitSteps/SubmitSteps.tsx"],"names":["baseUrl","welcomeUrl","getWelcomeStepsWithoutDots","storeKey","path","componentPath","props","nextStep","previousStep","welcomeStepsDefinitions","stepsDefinition","otherSteps","manualUploadStep","metadata","currentLogic","isShortAudioStep","getCoughSteps","getSpeechSteps","baseMetadata","total","progressCurrent","progressTotal","current","getQuestionarySteps","Layout","styled","div","theme","breakpoints","tablet","WizardContainer","StepContainer","WizardNavControlPortal","AsyncLoad","loadable","container","fallback","React","memo","steps","children","match","useRouteMatch","location","useLocation","useState","loadSteps","setLoadSteps","pathList","useMemo","base","url","replace","map","step","useEffect","timing","duration","key","exact","Array","isArray","s","render","id","setStorageType","window","localStorage","StoreKey","createStore","recordYourCough","recordingFile","uploadedFile","recordYourBreath","recordYourSpeech","name","SubmitSteps","state","useStateMachine","history","useHistory","problemRoute","inputState","out","welcome","patientId","toTest","push","file","route","itemWithProblem","find","toTestItem","undefined","size","checkFileConsistencyProblem"],"mappings":"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","file":"static/js/40.b5497b1d.chunk.js","sourcesContent":["const baseUrl = '/dubai-app/submit-steps';\r\nconst welcomeUrl = '/dubai-app/welcome';\r\n\r\nconst baseComponentPath = 'SubmitSteps';\r\nconst middleComponentPathRecording = 'RecordingsSteps';\r\nconst middleComponentPathQuestionary = 'Questionary';\r\nconst middleComponentPathSubmission = 'Submission';\r\nconst recordYourCoughLogic = 'recordYourCough';\r\nconst recordYourSpeechLogic = 'recordYourSpeech';\r\n\r\nfunction getCoughSteps(storeKey: string): Wizard.Step[] {\r\n  return [\r\n    {\r\n      path: '/step-record/cough',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/Introduction`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: '/dubai-app/welcome/step-4',\r\n        nextStep: `${baseUrl}/step-listen/cough`,\r\n        otherSteps: {\r\n          manualUploadStep: `${baseUrl}/step-manual-upload/cough`,\r\n        },\r\n        metadata: {\r\n          currentLogic: recordYourCoughLogic,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      path: '/step-manual-upload/cough',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/RecordManualUpload`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/step-record/cough`,\r\n        nextStep: `${baseUrl}/step-listen/cough`,\r\n        metadata: {\r\n          currentLogic: recordYourCoughLogic,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      path: '/step-listen/cough',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/ListenAudio`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/step-record/cough`,\r\n        nextStep: `${baseUrl}/questionary/step1`,\r\n        otherSteps: {\r\n          isShortAudioStep: `${baseUrl}/thank-you`,\r\n        },\r\n        metadata: {\r\n          currentLogic: recordYourCoughLogic,\r\n        },\r\n      },\r\n    },\r\n  ];\r\n}\r\n\r\nfunction getSpeechSteps(storeKey: string) {\r\n  return [\r\n    {\r\n      path: '/step-record/speech',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/Introduction`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/step-listen/breath`,\r\n        nextStep: `${baseUrl}/step-listen/speech`,\r\n        otherSteps: {\r\n          manualUploadStep: `${baseUrl}/step-manual-upload/speech`,\r\n        },\r\n        metadata: {\r\n          currentLogic: recordYourSpeechLogic,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      path: '/step-manual-upload/speech',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/RecordManualUpload`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/step-record/speech`,\r\n        nextStep: `${baseUrl}/step-listen/speech`,\r\n        metadata: {\r\n          currentLogic: recordYourSpeechLogic,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      path: '/step-listen/speech',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/ListenAudio`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/step-record/speech`,\r\n        nextStep: ``,\r\n        metadata: {\r\n          currentLogic: recordYourSpeechLogic,\r\n        },\r\n      },\r\n    },\r\n  ];\r\n}\r\n\r\nfunction getQuestionarySteps(storeKey: string): Wizard.Step[] {\r\n  const baseMetadata = {\r\n    total: 3,\r\n    progressCurrent: 3,\r\n    progressTotal: 3,\r\n  };\r\n  return [\r\n    {\r\n      path: '/questionary/step1',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathQuestionary}/Step1`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/step-listen/cough`, \r\n        nextStep: `${baseUrl}/questionary/step2`,\r\n        metadata: {\r\n          current: 1,\r\n          ...baseMetadata,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      path: '/questionary/step2',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathQuestionary}/Step2`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/questionary/step1`, \r\n        nextStep: `${baseUrl}/questionary/step3`,\r\n        metadata: {\r\n          current: 2,\r\n          ...baseMetadata,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      path: '/questionary/step3',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathQuestionary}/Step3`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/questionary/step2`, \r\n        nextStep: `${baseUrl}/sending`,\r\n        metadata: {\r\n          current: 3,\r\n          ...baseMetadata,\r\n        },\r\n      },\r\n    }\r\n  ];\r\n}\r\n\r\n/** Welcome Steps */\r\n\r\nexport function getWelcomeStepsWithoutDots(storeKey: string): Wizard.Step[] {\r\n  return [\r\n    {\r\n      path: '',\r\n      componentPath: 'Welcome/Step1',\r\n      props: {\r\n        storeKey,\r\n        nextStep: `${welcomeUrl}/step-2`,\r\n      },\r\n    },\r\n    {\r\n      path: '/step-2',\r\n      componentPath: 'Welcome/Step2',\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${welcomeUrl}`,\r\n        nextStep: `${welcomeUrl}/step-3`,\r\n      },\r\n    },\r\n  ];\r\n}\r\n\r\nexport function welcomeStepsDefinitions(storeKey: string): Wizard.Step[] {\r\n  return [\r\n    {\r\n      path: '/step-3',\r\n      componentPath: 'Welcome/Step3',\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${welcomeUrl}/step-2`,\r\n        nextStep: `${welcomeUrl}/step-4`\r\n      },\r\n    },\r\n    {\r\n      path: '/step-4',\r\n      componentPath: 'Welcome/Step4',\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${welcomeUrl}/step-3`,\r\n        nextStep: '/dubai-app/submit-steps/step-record/cough',\r\n        // nextStep: '/submit-steps/step-record/cough',\r\n      },\r\n    },\r\n  ];\r\n}\r\n\r\nexport default function stepsDefinition(storeKey: string) {\r\n  const steps: Wizard.Step[] = [\r\n    // Record Your Cough Steps\r\n    ...getCoughSteps(storeKey),\r\n    // Record Your Speech Steps\r\n    ...getSpeechSteps(storeKey),\r\n    // Questionary\r\n    ...getQuestionarySteps(storeKey),\r\n    {\r\n      path: '/sending',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathSubmission}/Sending`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/questionary/step2`, \r\n        nextStep: `${baseUrl}/thank-you`,\r\n      },\r\n    },\r\n    {\r\n      path: '/thank-you',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathSubmission}/ThankYou`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${welcomeUrl}`,\r\n        nextStep: '/welcome',\r\n      },\r\n    },\r\n  ];\r\n\r\n  return steps;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Layout = styled.div`\r\n  padding-bottom: 40px; \r\n\r\n  @media screen and (${props => props.theme.breakpoints.tablet}){\r\n    margin: auto;\r\n\r\n    max-width: 768px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport default Layout;\r\n","import styled from 'styled-components';\r\n\r\nexport const WizardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction:column;\r\n\r\n  height:100%;\r\n`;\r\n\r\nexport const StepContainer = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nexport const WizardNavControlPortal = styled.div`\r\n  margin-bottom: 24px;\r\n`;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\nimport SlideRoutes from 'react-slide-routes';\r\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom';\r\nimport { StateMachineProvider } from 'little-state-machine';\r\nimport Layout from 'components/Layout/';\r\nimport { WizardContainer, StepContainer, WizardNavControlPortal } from './style';\r\n\r\ninterface WizardProps {\r\n  steps: Wizard.Step[];\r\n}\r\n\r\ninterface AsyncLoadProps extends Partial<Wizard.StepProps> {\r\n  container: string;\r\n}\r\n\r\nconst AsyncLoad = loadable(({ container }: AsyncLoadProps) => import(`containers/${container}`), {\r\n  fallback: <div>Loading ...</div>,\r\n});\r\n\r\nfunction clearPath(path: string) {\r\n  return path.replace(/\\/$/, '');\r\n}\r\n\r\nconst Wizard = ({ steps, children }: React.PropsWithChildren<WizardProps>) => {\r\n  const match = useRouteMatch();\r\n  const location = useLocation();\r\n  const [loadSteps, setLoadSteps] = React.useState(false);\r\n\r\n  const pathList = React.useMemo(() => {\r\n    const base = clearPath(match.url);\r\n    return steps.map(step => base + step.path);\r\n  }, [match.url, steps]);\r\n\r\n  React.useEffect(() => {\r\n    setLoadSteps(true);\r\n  }, []);\r\n\r\n  return (\r\n    <StateMachineProvider>\r\n      <WizardContainer>\r\n        <StepContainer>\r\n          {loadSteps && (\r\n            <SlideRoutes location={location} timing=\"ease-in-out\" duration={500} pathList={pathList}>\r\n              {steps.map(step => (\r\n                <Route\r\n                  key={step.componentPath}\r\n                  exact\r\n                  path={Array.isArray(step.path)\r\n                    ? step.path.map(s => (match.path + s))\r\n                    : match.path + step.path}\r\n                  render={() => (\r\n                    <Layout>\r\n                      <AsyncLoad\r\n                        container={step.componentPath}\r\n                        {...step.props}\r\n                      />\r\n                    </Layout>\r\n\r\n                  )}\r\n                />\r\n              ))}\r\n            </SlideRoutes>\r\n          )}\r\n        </StepContainer>\r\n        <WizardNavControlPortal id=\"wizard-buttons\">\r\n          {children}\r\n        </WizardNavControlPortal>\r\n      </WizardContainer>\r\n    </StateMachineProvider>\r\n  );\r\n};\r\n\r\nexport default React.memo(Wizard);\r\n","import React from 'react';\r\nimport { createStore, setStorageType, useStateMachine } from 'little-state-machine';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// Wizard\r\nimport Wizard from 'components/Wizard';\r\n\r\n// Local\r\nimport stepsDefinition from 'helper/stepsDefinitions';\r\n\r\nsetStorageType(window.localStorage);\r\n\r\nconst StoreKey = 'submit-steps';\r\n\r\ncreateStore({\r\n  [StoreKey]: {\r\n    recordYourCough: {\r\n      recordingFile: null,\r\n      uploadedFile: null,\r\n    },\r\n    recordYourBreath: {\r\n      recordingFile: null,\r\n      uploadedFile: null,\r\n    },\r\n    recordYourSpeech: {\r\n      recordingFile: null,\r\n      uploadedFile: null,\r\n    },\r\n  },\r\n}, {\r\n  name: 'virumap-wizard',\r\n});\r\n\r\nconst SubmitSteps = () => {\r\n  // Hooks\r\n  const { state } = useStateMachine();\r\n  const history = useHistory();\r\n\r\n  // Effects\r\n  React.useEffect(() => {\r\n    const checkFileProblem = (file: File) => {\r\n      if (file && file.size === undefined) {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const checkFileConsistencyProblem = (inputState: Record<string, any>) => {\r\n      let out = null;\r\n      if (!inputState.welcome?.patientId && inputState[StoreKey]) {\r\n        const { recordYourCough, recordYourSpeech, recordYourBreath } = inputState[StoreKey];\r\n        const toTest = [];\r\n        \r\n        if (recordYourCough) {\r\n          const { recordingFile, uploadedFile } = recordYourCough;\r\n          if (recordingFile) {\r\n            toTest.push({ file: recordingFile, route: '/step-record/cough' });\r\n          }\r\n          if (uploadedFile) {\r\n            toTest.push({ file: uploadedFile, route: '/step-manual-upload/cough' });\r\n          }\r\n        }\r\n        if (recordYourBreath) {\r\n          const { recordingFile, uploadedFile } = recordYourBreath;\r\n          if (recordingFile) {\r\n            toTest.push({ file: recordingFile, route: '/step-record/breath' });\r\n          }\r\n          if (uploadedFile) {\r\n            toTest.push({ file: uploadedFile, route: '/step-manual-upload/breath' });\r\n          }\r\n        }\r\n\r\n        if (recordYourSpeech) {\r\n          const { recordingFile, uploadedFile } = recordYourCough;\r\n          if (recordingFile) {\r\n            toTest.push({ file: recordingFile, route: '/step-record/speech' });\r\n          }\r\n          if (uploadedFile) {\r\n            toTest.push({ file: uploadedFile, route: '/step-manual-upload/speech' });\r\n          }\r\n        }\r\n\r\n        const itemWithProblem = toTest.find(toTestItem => checkFileProblem(toTestItem.file));\r\n        if (itemWithProblem) {\r\n          out = itemWithProblem.route;\r\n        }\r\n      }\r\n      return out;\r\n    };\r\n\r\n    const problemRoute = checkFileConsistencyProblem(state);\r\n    if (problemRoute) {\r\n      history.push(`/dubai-app/${StoreKey}${problemRoute}`);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return null;\r\n};\r\n\r\nconst steps = stepsDefinition(StoreKey);\r\n\r\nconst WrapperSubmitSteps = () => (\r\n  <Wizard\r\n    steps={steps}\r\n  >\r\n    <SubmitSteps />\r\n  </Wizard>\r\n);\r\n\r\nexport default React.memo(WrapperSubmitSteps);\r\n"],"sourceRoot":""}
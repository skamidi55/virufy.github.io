{"version":3,"sources":["helper/stepsDefinitions.ts","components/Layout/Layout.ts","components/Wizard/style.ts","components/Wizard/Wizard.tsx","components/DotIndicators/style.ts","components/DotIndicators/DotIndicators.tsx","containers/Welcome/Welcome.tsx","containers/Welcome/index.ts"],"names":["baseUrl","welcomeUrl","getWelcomeStepsWithoutDots","storeKey","path","componentPath","props","nextStep","previousStep","welcomeStepsDefinitions","stepsDefinition","otherSteps","manualUploadStep","metadata","currentLogic","isShortAudioStep","getCoughSteps","getSpeechSteps","baseMetadata","total","progressCurrent","progressTotal","current","getQuestionarySteps","Layout","styled","div","theme","breakpoints","tablet","WizardContainer","StepContainer","WizardNavControlPortal","AsyncLoad","loadable","container","fallback","React","memo","steps","children","match","useRouteMatch","location","useLocation","useState","loadSteps","setLoadSteps","pathList","useMemo","base","url","replace","map","step","useEffect","timing","duration","key","exact","Array","isArray","s","render","id","WelcomeWizardStepIndicators","ul","WelcomeWizardStepIndicator","li","colors","gray","darkBlack","className","stepButtons","stepButtonsElements","push","setStorageType","window","localStorage","createStore","name","stepsWithoutDots","currentSteps","allSteps","pathname","active","findIndex","Wizard","DotIndicators","length"],"mappings":"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","file":"static/js/25.516786ef.chunk.js","sourcesContent":["const baseUrl = '/dubai-app/submit-steps';\r\nconst welcomeUrl = '/dubai-app/welcome';\r\n\r\nconst baseComponentPath = 'SubmitSteps';\r\nconst middleComponentPathRecording = 'RecordingsSteps';\r\nconst middleComponentPathQuestionary = 'Questionary';\r\nconst middleComponentPathSubmission = 'Submission';\r\nconst recordYourCoughLogic = 'recordYourCough';\r\nconst recordYourSpeechLogic = 'recordYourSpeech';\r\n\r\nfunction getCoughSteps(storeKey: string): Wizard.Step[] {\r\n  return [\r\n    {\r\n      path: '/step-record/cough',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/Introduction`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: '/dubai-app/welcome/step-4',\r\n        nextStep: `${baseUrl}/step-listen/cough`,\r\n        otherSteps: {\r\n          manualUploadStep: `${baseUrl}/step-manual-upload/cough`,\r\n        },\r\n        metadata: {\r\n          currentLogic: recordYourCoughLogic,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      path: '/step-manual-upload/cough',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/RecordManualUpload`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/step-record/cough`,\r\n        nextStep: `${baseUrl}/step-listen/cough`,\r\n        metadata: {\r\n          currentLogic: recordYourCoughLogic,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      path: '/step-listen/cough',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/ListenAudio`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/step-record/cough`,\r\n        nextStep: `${baseUrl}/questionary/step1`,\r\n        otherSteps: {\r\n          isShortAudioStep: `${baseUrl}/thank-you`,\r\n        },\r\n        metadata: {\r\n          currentLogic: recordYourCoughLogic,\r\n        },\r\n      },\r\n    },\r\n  ];\r\n}\r\n\r\nfunction getSpeechSteps(storeKey: string) {\r\n  return [\r\n    {\r\n      path: '/step-record/speech',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/Introduction`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/step-listen/breath`,\r\n        nextStep: `${baseUrl}/step-listen/speech`,\r\n        otherSteps: {\r\n          manualUploadStep: `${baseUrl}/step-manual-upload/speech`,\r\n        },\r\n        metadata: {\r\n          currentLogic: recordYourSpeechLogic,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      path: '/step-manual-upload/speech',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/RecordManualUpload`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/step-record/speech`,\r\n        nextStep: `${baseUrl}/step-listen/speech`,\r\n        metadata: {\r\n          currentLogic: recordYourSpeechLogic,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      path: '/step-listen/speech',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/ListenAudio`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/step-record/speech`,\r\n        nextStep: ``,\r\n        metadata: {\r\n          currentLogic: recordYourSpeechLogic,\r\n        },\r\n      },\r\n    },\r\n  ];\r\n}\r\n\r\nfunction getQuestionarySteps(storeKey: string): Wizard.Step[] {\r\n  const baseMetadata = {\r\n    total: 3,\r\n    progressCurrent: 3,\r\n    progressTotal: 3,\r\n  };\r\n  return [\r\n    {\r\n      path: '/questionary/step1',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathQuestionary}/Step1`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/step-listen/cough`, \r\n        nextStep: `${baseUrl}/questionary/step2`,\r\n        metadata: {\r\n          current: 1,\r\n          ...baseMetadata,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      path: '/questionary/step2',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathQuestionary}/Step2`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/questionary/step1`, \r\n        nextStep: `${baseUrl}/questionary/step3`,\r\n        metadata: {\r\n          current: 2,\r\n          ...baseMetadata,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      path: '/questionary/step3',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathQuestionary}/Step3`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/questionary/step2`, \r\n        nextStep: `${baseUrl}/sending`,\r\n        metadata: {\r\n          current: 3,\r\n          ...baseMetadata,\r\n        },\r\n      },\r\n    }\r\n  ];\r\n}\r\n\r\n/** Welcome Steps */\r\n\r\nexport function getWelcomeStepsWithoutDots(storeKey: string): Wizard.Step[] {\r\n  return [\r\n    {\r\n      path: '',\r\n      componentPath: 'Welcome/Step1',\r\n      props: {\r\n        storeKey,\r\n        nextStep: `${welcomeUrl}/step-2`,\r\n      },\r\n    },\r\n    {\r\n      path: '/step-2',\r\n      componentPath: 'Welcome/Step2',\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${welcomeUrl}`,\r\n        nextStep: `${welcomeUrl}/step-3`,\r\n      },\r\n    },\r\n  ];\r\n}\r\n\r\nexport function welcomeStepsDefinitions(storeKey: string): Wizard.Step[] {\r\n  return [\r\n    {\r\n      path: '/step-3',\r\n      componentPath: 'Welcome/Step3',\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${welcomeUrl}/step-2`,\r\n        nextStep: `${welcomeUrl}/step-4`\r\n      },\r\n    },\r\n    {\r\n      path: '/step-4',\r\n      componentPath: 'Welcome/Step4',\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${welcomeUrl}/step-3`,\r\n        nextStep: '/dubai-app/submit-steps/step-record/cough',\r\n        // nextStep: '/submit-steps/step-record/cough',\r\n      },\r\n    },\r\n  ];\r\n}\r\n\r\nexport default function stepsDefinition(storeKey: string) {\r\n  const steps: Wizard.Step[] = [\r\n    // Record Your Cough Steps\r\n    ...getCoughSteps(storeKey),\r\n    // Record Your Speech Steps\r\n    ...getSpeechSteps(storeKey),\r\n    // Questionary\r\n    ...getQuestionarySteps(storeKey),\r\n    {\r\n      path: '/sending',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathSubmission}/Sending`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${baseUrl}/questionary/step2`, \r\n        nextStep: `${baseUrl}/thank-you`,\r\n      },\r\n    },\r\n    {\r\n      path: '/thank-you',\r\n      componentPath: `${baseComponentPath}/${middleComponentPathSubmission}/ThankYou`,\r\n      props: {\r\n        storeKey,\r\n        previousStep: `${welcomeUrl}`,\r\n        nextStep: '/welcome',\r\n      },\r\n    },\r\n  ];\r\n\r\n  return steps;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Layout = styled.div`\r\n  padding-bottom: 40px; \r\n\r\n  @media screen and (${props => props.theme.breakpoints.tablet}){\r\n    margin: auto;\r\n\r\n    max-width: 768px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport default Layout;\r\n","import styled from 'styled-components';\r\n\r\nexport const WizardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction:column;\r\n\r\n  height:100%;\r\n`;\r\n\r\nexport const StepContainer = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nexport const WizardNavControlPortal = styled.div`\r\n  margin-bottom: 24px;\r\n`;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\nimport SlideRoutes from 'react-slide-routes';\r\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom';\r\nimport { StateMachineProvider } from 'little-state-machine';\r\nimport Layout from 'components/Layout/';\r\nimport { WizardContainer, StepContainer, WizardNavControlPortal } from './style';\r\n\r\ninterface WizardProps {\r\n  steps: Wizard.Step[];\r\n}\r\n\r\ninterface AsyncLoadProps extends Partial<Wizard.StepProps> {\r\n  container: string;\r\n}\r\n\r\nconst AsyncLoad = loadable(({ container }: AsyncLoadProps) => import(`containers/${container}`), {\r\n  fallback: <div>Loading ...</div>,\r\n});\r\n\r\nfunction clearPath(path: string) {\r\n  return path.replace(/\\/$/, '');\r\n}\r\n\r\nconst Wizard = ({ steps, children }: React.PropsWithChildren<WizardProps>) => {\r\n  const match = useRouteMatch();\r\n  const location = useLocation();\r\n  const [loadSteps, setLoadSteps] = React.useState(false);\r\n\r\n  const pathList = React.useMemo(() => {\r\n    const base = clearPath(match.url);\r\n    return steps.map(step => base + step.path);\r\n  }, [match.url, steps]);\r\n\r\n  React.useEffect(() => {\r\n    setLoadSteps(true);\r\n  }, []);\r\n\r\n  return (\r\n    <StateMachineProvider>\r\n      <WizardContainer>\r\n        <StepContainer>\r\n          {loadSteps && (\r\n            <SlideRoutes location={location} timing=\"ease-in-out\" duration={500} pathList={pathList}>\r\n              {steps.map(step => (\r\n                <Route\r\n                  key={step.componentPath}\r\n                  exact\r\n                  path={Array.isArray(step.path)\r\n                    ? step.path.map(s => (match.path + s))\r\n                    : match.path + step.path}\r\n                  render={() => (\r\n                    <Layout>\r\n                      <AsyncLoad\r\n                        container={step.componentPath}\r\n                        {...step.props}\r\n                      />\r\n                    </Layout>\r\n\r\n                  )}\r\n                />\r\n              ))}\r\n            </SlideRoutes>\r\n          )}\r\n        </StepContainer>\r\n        <WizardNavControlPortal id=\"wizard-buttons\">\r\n          {children}\r\n        </WizardNavControlPortal>\r\n      </WizardContainer>\r\n    </StateMachineProvider>\r\n  );\r\n};\r\n\r\nexport default React.memo(Wizard);\r\n","import styled from 'styled-components';\r\n\r\nexport const WelcomeWizardStepIndicators = styled.ul`\r\n  display: flex;\r\n  justify-content:center;\r\n  padding: 0;\r\n  margin-bottom: 22px;\r\n\r\n @media screen and (${props => props.theme.breakpoints.tablet}){\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nexport const WelcomeWizardStepIndicator = styled.li`\r\n  background-color: ${props => props.theme.colors.gray};\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n\r\n  height: 7px;\r\n  width: 7px;\r\n\r\n  &:not(:first-of-type){\r\n    margin-left: 6px;\r\n  };\r\n\r\n  &.active {\r\n    background-color: ${props => props.theme.colors.darkBlack};\r\n  };\r\n\r\n`;\r\n","/* eslint-disable react/require-default-props */\r\nimport React from 'react';\r\n\r\n// Styles\r\nimport {\r\n  WelcomeWizardStepIndicators,\r\n  WelcomeWizardStepIndicator,\r\n} from './style';\r\n\r\ninterface ProgressIndicatorProps {\r\n  className?: string;\r\n  current: number;\r\n  total: number;\r\n}\r\n\r\nconst ProgressIndicator = ({\r\n  className = '',\r\n  current,\r\n  total,\r\n}: ProgressIndicatorProps) => {\r\n  // Memos\r\n  const stepButtons = React.useMemo(() => {\r\n    const stepButtonsElements: React.ReactElement[] = [];\r\n\r\n    for (let step = 0; step < total; step += 1) {\r\n      stepButtonsElements.push((\r\n        <WelcomeWizardStepIndicator\r\n          className={step === current ? 'active' : ''}\r\n          id={`WelcomeStepButton-${step}`}\r\n          key={`WelcomeStepButton-${step}`}\r\n        />\r\n      ));\r\n    }\r\n\r\n    return stepButtonsElements;\r\n  }, [current, total]);\r\n\r\n  return (\r\n    <WelcomeWizardStepIndicators className={className}>\r\n      {stepButtons}\r\n    </WelcomeWizardStepIndicators>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProgressIndicator);\r\n","import React from 'react';\r\nimport { useRouteMatch, useLocation } from 'react-router-dom';\r\nimport { createStore, setStorageType } from 'little-state-machine';\r\n\r\n// Wizard\r\nimport Wizard from 'components/Wizard';\r\n\r\n// Components\r\nimport DotIndicators from 'components/DotIndicators';\r\nimport {\r\n  getWelcomeStepsWithoutDots, welcomeStepsDefinitions,\r\n} from 'helper/stepsDefinitions';\r\n\r\nsetStorageType(window.localStorage);\r\n\r\nconst StoreKey = 'welcome';\r\n\r\ncreateStore({\r\n  [StoreKey]: {},\r\n}, {\r\n  name: 'virumap-wizard',\r\n});\r\n\r\nconst stepsWithoutDots = getWelcomeStepsWithoutDots(StoreKey);\r\nconst currentSteps = welcomeStepsDefinitions(StoreKey);\r\n\r\nconst allSteps = [...stepsWithoutDots, ...currentSteps];\r\n\r\nconst Welcome = () => {\r\n  // Hooks\r\n  const location = useLocation();\r\n  const match = useRouteMatch();\r\n\r\n  const url = location.pathname.replace(match.url, '');\r\n\r\n  const active = currentSteps.findIndex(step => step.path === url);\r\n\r\n  return (\r\n    <Wizard\r\n      steps={allSteps}\r\n    >\r\n      {active >= 0 && (\r\n        <DotIndicators\r\n          current={active}\r\n          total={currentSteps.length}\r\n        />\r\n      )}\r\n    </Wizard>\r\n  );\r\n};\r\n\r\nexport default React.memo(Welcome);\r\n","export { default } from './Welcome';\r\n"],"sourceRoot":""}